// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SB.Security.Persistence;

#nullable disable

namespace SB.Security.Migrations
{
    [DbContext(typeof(SBSecurityDBContext))]
    [Migration("20230713190443_SeedingData")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SB.Security.Models.Base.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAttemptAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginFailedAttemptsCount")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaltKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c68023aa-8d1c-47ab-90e2-3ad749f4cb1c"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2141),
                            Email = "sbhowmikcse08@gmail.com",
                            FullName = "Sreemonta Bhowmik",
                            IsActive = true,
                            LastLoginAttemptAt = new DateTime(2023, 7, 13, 23, 4, 43, 776, DateTimeKind.Local).AddTicks(2099),
                            LoginFailedAttemptsCount = 0,
                            Password = "$2b$10$dqPNaHnCGjUcvxXHTRXmDeNwNRQ0YI8kT9376noZw8i8tDj8KKoEa",
                            SaltKey = "$2b$10$dqPNaHnCGjUcvxXHTRXmDe",
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2142),
                            UserName = "sree",
                            UserRole = "Admin"
                        });
                });

            modelBuilder.Entity("SB.Security.Models.Base.UserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("SB.Security.Models.Base.UserMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CssClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropdownIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeader")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLinkClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserMenu");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9228b41c-8db5-4624-9427-be645234759f"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2254),
                            CssClass = "nav-header",
                            Icon = "",
                            IsActive = true,
                            IsHeader = true,
                            Name = "Home",
                            Remark = "Header",
                            RouteLink = "",
                            RouteLinkClass = "",
                            SerialNo = 1,
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2255)
                        },
                        new
                        {
                            Id = new Guid("0ba16451-3045-4770-8e05-f894666acaf4"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2258),
                            CssClass = "nav-item",
                            Icon = "nav-icon fas fa-tachometer-alt",
                            IsActive = true,
                            IsHeader = false,
                            Name = "Dashboard",
                            Remark = "Navigation Item",
                            RouteLink = "/business/home",
                            RouteLinkClass = "nav-link active",
                            SerialNo = 2,
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2258)
                        },
                        new
                        {
                            Id = new Guid("9ee64115-c836-48c6-824a-0420fa6473f8"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2260),
                            CssClass = "nav-header",
                            Icon = "",
                            IsActive = true,
                            IsHeader = true,
                            Name = "Business",
                            Remark = "Header",
                            RouteLink = "",
                            RouteLinkClass = "",
                            SerialNo = 3,
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2260)
                        },
                        new
                        {
                            Id = new Guid("d4e001f6-9dc8-46f2-bfd9-f63ba5f1c1ab"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2273),
                            CssClass = "nav-item",
                            DropdownIcon = "fas fa-angle-left right",
                            Icon = "nav-icon fas fa-cog",
                            IsActive = true,
                            IsHeader = false,
                            Name = "Security",
                            ParentId = new Guid("054da5d9-8034-40d4-995f-9e11a344d764"),
                            Remark = "Navigation Item",
                            RouteLink = "",
                            RouteLinkClass = "nav-link active",
                            SerialNo = 4,
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2273)
                        },
                        new
                        {
                            Id = new Guid("a2228b17-c6ab-4da0-a071-65a099f03d56"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2276),
                            CssClass = "nav-item",
                            Icon = "far fa-circle nav-icon",
                            IsActive = true,
                            IsHeader = false,
                            Name = "User",
                            ParentId = new Guid("7630c8a8-0319-4e9f-8020-e2feaf0cde5c"),
                            Remark = "Navigation Item",
                            RouteLink = "/business/security",
                            RouteLinkClass = "nav-link",
                            SerialNo = 5,
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2276)
                        },
                        new
                        {
                            Id = new Guid("6f36b193-383f-491e-a443-887a4774b999"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2278),
                            CssClass = "nav-header",
                            Icon = "",
                            IsActive = true,
                            IsHeader = true,
                            Name = "Settings",
                            Remark = "Header",
                            RouteLink = "",
                            RouteLinkClass = "",
                            SerialNo = 6,
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2278)
                        },
                        new
                        {
                            Id = new Guid("fa9b5c11-39e9-43f7-9431-86acb209e552"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2280),
                            CssClass = "nav-item",
                            Icon = "nav-icon fas fa-cog",
                            IsActive = true,
                            IsHeader = false,
                            Name = "App Settings",
                            Remark = "Navigation Item",
                            RouteLink = "/business/appsettings",
                            RouteLinkClass = "nav-link active",
                            SerialNo = 7,
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2280)
                        });
                });

            modelBuilder.Entity("SB.Security.Models.Base.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee4338ad-5e80-40d6-88eb-085cddea22c0"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2232),
                            Description = "Admin",
                            IsActive = true,
                            RoleName = "Admin",
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2233)
                        },
                        new
                        {
                            Id = new Guid("ae992bbb-ecfa-428e-9e7c-760b29ba1311"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2235),
                            Description = "User",
                            IsActive = true,
                            RoleName = "User",
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2235)
                        });
                });

            modelBuilder.Entity("SB.Security.Models.Base.UserRoleMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserRoleMenu");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d437d3e-7bdc-4541-a35f-f9853796a8bb"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2338),
                            IsActive = true,
                            MenuId = new Guid("a4241050-178f-45f1-a92d-e3ad54672c09"),
                            RoleId = new Guid("7d45960e-a4a5-411c-8084-66c477b16379"),
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2338)
                        },
                        new
                        {
                            Id = new Guid("4f5dc663-fa73-45e5-850d-4a1479f7911b"),
                            CreatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2344),
                            IsActive = true,
                            MenuId = new Guid("e99c408a-0c57-4d60-b000-c70d0745156b"),
                            RoleId = new Guid("10fb98f4-c1d5-4644-9183-b380021fc283"),
                            UpdatedDate = new DateTime(2023, 7, 13, 19, 4, 43, 776, DateTimeKind.Utc).AddTicks(2344)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
