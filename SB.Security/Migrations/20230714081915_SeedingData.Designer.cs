// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SB.Security.Persistence;

#nullable disable

namespace SB.Security.Migrations
{
    [DbContext(typeof(SBSecurityDBContext))]
    [Migration("20230714081915_SeedingData")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SB.Security.Models.Base.UserInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAttemptAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginFailedAttemptsCount")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaltKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52bc5ac3-8a09-4605-864d-58ab29a6761b"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6470),
                            Email = "sbhowmikcse08@gmail.com",
                            FullName = "Sreemonta Bhowmik",
                            IsActive = true,
                            LastLoginAttemptAt = new DateTime(2023, 7, 14, 12, 19, 14, 987, DateTimeKind.Local).AddTicks(6265),
                            LoginFailedAttemptsCount = 0,
                            Password = "$2b$10$dqPNaHnCGjUcvxXHTRXmDeNwNRQ0YI8kT9376noZw8i8tDj8KKoEa",
                            SaltKey = "$2b$10$dqPNaHnCGjUcvxXHTRXmDe",
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6470),
                            UserName = "sree",
                            UserRole = "Admin"
                        });
                });

            modelBuilder.Entity("SB.Security.Models.Base.UserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("SB.Security.Models.Base.UserMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CssClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DropdownIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeader")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteLinkClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserMenu");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc639f43-be0d-4b00-b664-b8a159ed3d19"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6672),
                            CssClass = "nav-header",
                            Icon = "",
                            IsActive = true,
                            IsHeader = true,
                            Name = "Home",
                            Remark = "Header",
                            RouteLink = "",
                            RouteLinkClass = "",
                            SerialNo = 1,
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6672)
                        },
                        new
                        {
                            Id = new Guid("b86a96b9-9a26-4848-8381-a270a1cd2eda"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6675),
                            CssClass = "nav-item",
                            Icon = "nav-icon fas fa-tachometer-alt",
                            IsActive = true,
                            IsHeader = false,
                            Name = "Dashboard",
                            Remark = "Navigation Item",
                            RouteLink = "/business/home",
                            RouteLinkClass = "nav-link active",
                            SerialNo = 2,
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6676)
                        },
                        new
                        {
                            Id = new Guid("20e6e353-1d7b-4382-8528-2749dee0d067"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6678),
                            CssClass = "nav-header",
                            Icon = "",
                            IsActive = true,
                            IsHeader = true,
                            Name = "Business",
                            Remark = "Header",
                            RouteLink = "",
                            RouteLinkClass = "",
                            SerialNo = 3,
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6678)
                        },
                        new
                        {
                            Id = new Guid("1e5313ef-0224-4dc9-9b69-e5fe31397943"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6693),
                            CssClass = "nav-item",
                            DropdownIcon = "fas fa-angle-left right",
                            Icon = "nav-icon fas fa-cog",
                            IsActive = true,
                            IsHeader = false,
                            Name = "Security",
                            ParentId = new Guid("5352e0cf-e7d7-4449-9ff7-232c09806937"),
                            Remark = "Navigation Item",
                            RouteLink = "",
                            RouteLinkClass = "nav-link active",
                            SerialNo = 4,
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6694)
                        },
                        new
                        {
                            Id = new Guid("8e6a3c9e-b316-4b87-a37b-a34cef6e0c1d"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6696),
                            CssClass = "nav-item",
                            Icon = "far fa-circle nav-icon",
                            IsActive = true,
                            IsHeader = false,
                            Name = "User",
                            ParentId = new Guid("a9b05c8b-84aa-4edf-871a-bff7110a174f"),
                            Remark = "Navigation Item",
                            RouteLink = "/business/security",
                            RouteLinkClass = "nav-link",
                            SerialNo = 5,
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6697)
                        },
                        new
                        {
                            Id = new Guid("243de74f-beb1-4366-9ca8-41e414882570"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6698),
                            CssClass = "nav-header",
                            Icon = "",
                            IsActive = true,
                            IsHeader = true,
                            Name = "Settings",
                            Remark = "Header",
                            RouteLink = "",
                            RouteLinkClass = "",
                            SerialNo = 6,
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6699)
                        },
                        new
                        {
                            Id = new Guid("d58d22e7-bc6b-4823-a81d-41c1869239e9"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6701),
                            CssClass = "nav-item",
                            Icon = "nav-icon fas fa-cog",
                            IsActive = true,
                            IsHeader = false,
                            Name = "App Settings",
                            Remark = "Navigation Item",
                            RouteLink = "/business/appsettings",
                            RouteLinkClass = "nav-link active",
                            SerialNo = 7,
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6701)
                        });
                });

            modelBuilder.Entity("SB.Security.Models.Base.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a6152df-89c5-4b5c-8b88-be3686ab5b8d"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6654),
                            Description = "Admin",
                            IsActive = true,
                            RoleName = "Admin",
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6655)
                        },
                        new
                        {
                            Id = new Guid("85008dde-a159-4b81-ab52-00859404109d"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6657),
                            Description = "User",
                            IsActive = true,
                            RoleName = "User",
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6657)
                        });
                });

            modelBuilder.Entity("SB.Security.Models.Base.UserRoleMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserRoleMenu");

                    b.HasData(
                        new
                        {
                            Id = new Guid("63ffa85c-bff6-4807-8525-b96404437008"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6722),
                            IsActive = true,
                            MenuId = new Guid("ad987118-9c71-4a84-9df1-b975314e0cdb"),
                            RoleId = new Guid("4ba27142-a0c9-4331-bf62-4d21eb9ae4fd"),
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6723)
                        },
                        new
                        {
                            Id = new Guid("9ed95872-e35a-4c60-831d-0308705beedd"),
                            CreatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6727),
                            IsActive = true,
                            MenuId = new Guid("cc6ce2af-e055-4d3e-9df6-b1d045eb89cd"),
                            RoleId = new Guid("cc270c13-54d3-4653-9327-41cfe2b81a85"),
                            UpdatedDate = new DateTime(2023, 7, 14, 8, 19, 14, 987, DateTimeKind.Utc).AddTicks(6728)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
